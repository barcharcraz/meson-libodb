project('libodb', 'cpp', version: '2.4.0')

odb_files = files(
'odb/callback.cxx',
'odb/connection.cxx',
'odb/database.cxx',
'odb/exceptions.cxx',
'odb/lazy-ptr-impl.cxx',
'odb/prepared-query.cxx',
'odb/query-dynamic.cxx',
'odb/result.cxx',
'odb/schema-catalog.cxx',
'odb/section.cxx',
'odb/session.cxx',
'odb/statement-processing.cxx',
'odb/statement.cxx',
'odb/tracer.cxx',
'odb/transaction.cxx',
'odb/vector-impl.cxx',
'odb/details/buffer.cxx',
'odb/details/condition.cxx',
'odb/details/lock.cxx',
'odb/details/mutex.cxx',
'odb/details/shared-ptr/base.cxx',

)
odb_headers = files(
'odb/cache-traits.hxx',
'odb/callback.hxx',
'odb/connection.hxx',
'odb/container-traits.hxx',
'odb/core.hxx',
'odb/database.hxx',
'odb/exception.hxx',
'odb/exceptions.hxx',
'odb/forward.hxx',
'odb/function-table.hxx',
'odb/lazy-pointer-traits.hxx',
'odb/lazy-ptr-impl.hxx',
'odb/lazy-ptr.hxx',
'odb/no-id-object-result.hxx',
'odb/no-op-cache-traits.hxx',
'odb/nullable.hxx',
'odb/object-result.hxx',
'odb/pointer-traits.hxx',
'odb/polymorphic-info.hxx',
'odb/polymorphic-map.hxx',
'odb/polymorphic-object-result.hxx',
'odb/post.hxx',
'odb/pre.hxx',
'odb/prepared-query.hxx',
'odb/query-dynamic.hxx',
'odb/query.hxx',
'odb/result.hxx',
'odb/schema-catalog-impl.hxx',
'odb/schema-catalog.hxx',
'odb/schema-version.hxx',
'odb/section.hxx',
'odb/session.hxx',
'odb/simple-object-result.hxx',
'odb/statement-processing-common.hxx',
'odb/statement.hxx',
'odb/std-array-traits.hxx',
'odb/std-deque-traits.hxx',
'odb/std-forward-list-traits.hxx',
'odb/std-list-traits.hxx',
'odb/std-map-traits.hxx',
'odb/std-set-traits.hxx',
'odb/std-unordered-map-traits.hxx',
'odb/std-unordered-set-traits.hxx',
'odb/std-vector-traits.hxx',
'odb/tracer.hxx',
'odb/traits.hxx',
'odb/transaction.hxx',
'odb/vector-impl.hxx',
'odb/vector-traits.hxx',
'odb/vector.hxx',
'odb/version.hxx',
'odb/view-image.hxx',
'odb/view-result.hxx',
'odb/wrapper-traits.hxx',
'odb/compilers/vc/post.hxx',
'odb/compilers/vc/pre.hxx',
'odb/details/buffer.hxx',
'odb/details/c-string.hxx',
'odb/details/condition.hxx',
'odb/details/config.hxx',
'odb/details/exception.hxx',
'odb/details/export.hxx',
'odb/details/function-wrapper.hxx',
'odb/details/lock.hxx',
'odb/details/mutex.hxx',
'odb/details/shared-ptr-fwd.hxx',
'odb/details/shared-ptr.hxx',
'odb/details/thread.hxx',
'odb/details/tls.hxx',
'odb/details/transfer-ptr.hxx',
'odb/details/type-info.hxx',
'odb/details/unique-ptr.hxx',
'odb/details/unused.hxx',
'odb/details/wrapper-p.hxx',
'odb/details/meta/answer.hxx',
'odb/details/meta/class-p.hxx',
'odb/details/meta/polymorphic-p.hxx',
'odb/details/meta/remove-const-volatile.hxx',
'odb/details/meta/remove-const.hxx',
'odb/details/meta/remove-pointer.hxx',
'odb/details/meta/remove-volatile.hxx',
'odb/details/meta/static-assert.hxx',
'odb/details/posix/condition.hxx',
'odb/details/posix/exceptions.hxx',
'odb/details/posix/mutex.hxx',
'odb/details/posix/thread.hxx',
'odb/details/posix/tls.hxx',
'odb/details/shared-ptr/base.hxx',
'odb/details/shared-ptr/counter-type.hxx',
'odb/details/shared-ptr/exception.hxx',
'odb/details/win32/condition.hxx',
'odb/details/win32/exceptions.hxx',
'odb/details/win32/init.hxx',
'odb/details/win32/lock.hxx',
'odb/details/win32/mutex.hxx',
'odb/details/win32/once-init.hxx',
'odb/details/win32/once.hxx',
'odb/details/win32/thread.hxx',
'odb/details/win32/tls-init.hxx',
'odb/details/win32/tls.hxx',
'odb/details/win32/windows.hxx',
'odb/tr1/lazy-pointer-traits.hxx',
'odb/tr1/lazy-ptr.hxx',
'odb/tr1/memory.hxx',
'odb/tr1/pointer-traits.hxx',
'odb/tr1/wrapper-traits.hxx'
)
if host_machine.system() == 'windows'
    odb_files += files(
        'odb/details/win32/condition.cxx',
        'odb/details/win32/dll.cxx',
        'odb/details/win32/exceptions.cxx',
        'odb/details/win32/init.cxx',
        'odb/details/win32/once.cxx',
        'odb/details/win32/thread.cxx',
        'odb/details/win32/tls.cxx'
    )
else
    odb_files += files(
        'odb/details/posix/exceptions.cxx',
        'odb/details/posix/thread.cxx'
    )
endif

args = ''
if get_option('default_library') == 'shared'
    args = '-DLIBODB_DYNAMIC_LIB'
elif get_option('default_library') == 'static'
    args = '-DLIBODB_STATIC_LIB'
endif
odb_lib = library('odb', odb_files,
    cpp_args: args,
    install: true)